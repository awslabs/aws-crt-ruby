name: CI

on:
  push:
    branches-ignore:
      - 'main'

env:
  BUILDER_VERSION: v0.8.19
  BUILDER_SOURCE: releases
  BUILDER_HOST: https://d19elf31gohf1l.cloudfront.net
  PACKAGE_NAME: aws-crt-ruby
  LINUX_BASE_IMAGE: ubuntu-16-x64
  RUN: ${{ github.run_id }}-${{ github.run_number }}

# https://github.com/ruby/setup-ruby
jobs:

  linux:
    strategy:
      fail-fast: false
      matrix:
        ruby: [2.5, 2.6, 2.7, jruby]
    runs-on: ubuntu-latest
    steps:
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
      - name: Build ${{ env.PACKAGE_NAME }} + consumers
        run: |
          python3 -c "from urllib.request import urlretrieve; urlretrieve('${{ env.BUILDER_HOST }}/${{ env.BUILDER_SOURCE }}/${{ env.BUILDER_VERSION }}/builder.pyz?run=${{ env.RUN }}', 'builder')"
          chmod a+x builder
          ./builder build -p ${{ env.PACKAGE_NAME }} downstream

  manylinux:
    strategy:
      fail-fast: false
      matrix:
        os: [ linux ]
        ruby: [ 2.7 ]
        arch:
          - x64
          - aarch64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v1

      # Only aarch64 needs this, but it doesn't hurt anything
      - name: Install qemu/docker
        run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

      - run: echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com -u $GITHUB_ACTOR --password-stdin
      - run: docker pull docker.pkg.github.com/$GITHUB_REPOSITORY/build-cache-no-buildkit || true
      - run: docker build docker-images/manylinux2014-${{ matrix.arch }}-ruby -t local-${{ matrix.arch }} --cache-from=docker.pkg.github.com/$GITHUB_REPOSITORY/build-cache-no-buildkit
      - run: docker tag local-${{ matrix.arch }} docker.pkg.github.com/$GITHUB_REPOSITORY/build-cache-no-buildkit && docker push docker.pkg.github.com/$GITHUB_REPOSITORY/build-cache-no-buildkit || true

      - name: Build and test
        run: |
          docker run --env GITHUB_REF local-${{ matrix.arch }} --version=${{env.BUILDER_VERSION}} build -p ${{ env.PACKAGE_NAME }} downstream

  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Build ${{ env.PACKAGE_NAME }} + consumers
        run: |
          ruby -v
          gem install bundler
          bundle install
          bundle exec rake release

  osx:
    strategy:
      fail-fast: false
      matrix:
        os: [macos]
        ruby: [2.5, 2.6, 2.7, jruby]
    runs-on: macos-latest
    steps:
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
      - name: Build ${{ env.PACKAGE_NAME }} + consumers
        run: |
          python3 -c "from urllib.request import urlretrieve; urlretrieve('${{ env.BUILDER_HOST }}/${{ env.BUILDER_SOURCE }}/${{ env.BUILDER_VERSION }}/builder.pyz?run=${{ env.RUN }}', 'builder')"
          chmod a+x builder
          ./builder build -p ${{ env.PACKAGE_NAME }} downstream

  # Cross-compile for Apple silicon.
  # It would be better to run tests natively on one of these machines, but we
  # don't currently have access to one in the cloud.
  osx-arm64-cross-compile:
    runs-on: macos-latest
    steps:
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7
      - name: Build ${{ env.PACKAGE_NAME }} + consumers
        run: |
          bundle install
          bundle exec rake "gem:aws-crt:platform[arm64]"
