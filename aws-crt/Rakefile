require 'rake/clean'
require 'rspec/core/rake_task'
require 'rubocop/rake_task'

CLEAN.include 'tmp'
CLEAN.include 'pkg'

desc 'Compile CRT libraries and install to bin'
task :bin do
  require_relative 'ext/compile'
  crt_compile_bin
end

task 'bin:all' do
  # TODO: generate or copy/download ect binaries for all platforms
end

desc 'Build the aws-crt gem for the local platform'
task 'gem:local' => [:bin] do
  require 'rubygems/package'
  require 'fileutils'
  require_relative 'lib/aws-crt/platforms'
  platform = local_platform
  binary_name = crt_bin_name(platform)

  root = File.dirname(__FILE__)
  pkgs = File.join(root, 'pkg/')
  FileUtils.mkdir_p(pkgs, verbose: true)

  # Load our gem specification.
  orig_spec = Gem::Specification.load('aws-crt.gemspec')
  spec = orig_spec.dup
  spec.platform = platform
  spec.files << "bin/#{platform.cpu}/#{binary_name}"

  # Build and move the gem to the pkg/ directory.
  gemname = Gem::Package.build(spec)
  File.join(pkgs, File.basename(gemname)).tap do |gempath|
    FileUtils.mv(gemname, gempath, verbose: true)
  end
end

desc 'Build the aws-crt gem for pure-ruby'
task 'gem:pure-ruby' => :clean do
  require 'rubygems/package'
  require 'fileutils'

  platform = Gem::Platform::RUBY

  root = File.dirname(__FILE__)
  pkgs = File.join(root, 'pkg')
  FileUtils.mkdir_p(pkgs, verbose: true)

  # Load our gem specification.
  orig_spec = Gem::Specification.load('aws-crt.gemspec')
  spec = orig_spec.dup
  spec.platform = platform
  spec.files += Dir['native/**/*']
  spec.extensions = FileList['ext/extconf.rb']

  # Build and move the gem to the pkg/ directory.
  gemname = Gem::Package.build(spec)
  File.join(pkgs, File.basename(gemname)).tap do |gempath|
    FileUtils.mv(gemname, gempath, verbose: true)
  end
end

desc 'Build the aws-crt gem for jruby, bundling all currently built platforms'
task 'gem:jruby' => 'bin:all' do
  require 'rubygems/package'
  require 'fileutils'

  platform = 'universal-java'

  root = File.dirname(__FILE__)
  pkgs = File.join(root, 'pkg')
  bins = File.join(root, 'bin')
  FileUtils.mkdir_p(pkgs, verbose: true)

  bin_platforms = Dir.chdir(bins) do
    Dir.glob('*/*').reject { |f| File.directory? f }
  end

  puts "Generating JRuby package with bin support for: #{bin_platforms}"

  # Load our gem specification.
  orig_spec = Gem::Specification.load('aws-crt.gemspec')
  spec = orig_spec.dup
  spec.platform = platform
  spec.files += Dir['bin/**/*'].reject { |f| File.directory? f }

  # Build and move the gem to the pkg/ directory.
  gemname = Gem::Package.build(spec)
  File.join(pkgs, File.basename(gemname)).tap do |gempath|
    FileUtils.mv(gemname, gempath, verbose: true)
  end
end

RSpec::Core::RakeTask.new(:spec)
task :spec => :bin

RuboCop::RakeTask.new(:rubocop) do |t|
  config_file = File.join(File.dirname(__FILE__), '..', '.rubocop.yml')
  t.options = ['-E', '-S', '-c', config_file]
end
